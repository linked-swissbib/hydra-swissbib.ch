# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:
    linked_swissbib.elasticsearchadapter_adapter:
        class: ElasticsearchAdapter\Adapter
        arguments: ['@linked_swissbib.elasticsearchadapter_elasticsearchclientconnector']

    linked_swissbib.elasticsearchadapter_templatesearchbuilder:
        class: ElasticsearchAdapter\SearchBuilder\TemplateSearchBuilder
        arguments: ['%elasticsearch_adapter.templates%']

    linked_swissbib.elasticsearchadapter_elasticsearchclientconnector:
        class: ElasticsearchAdapter\Connector\ElasticsearchClientConnector
        arguments: ['%elasticsearch_adapter.hosts%']

    linked_swissbib.elasticsearch_data_provider:
        class: LinkedSwissbibBundle\DataProvider\ElasticsearchDataProvider
        tags: [ { name: 'api_platform.item_data_provider', priority: 1 }, { name: 'api_platform.collection_data_provider', priority: 1 } ]
        arguments:
          - '@linked_swissbib.elasticsearchadapter_adapter'
          - '@linked_swissbib.elasticsearchadapter_templatesearchbuilder'
          - '@linked_swissbib.entity_simple_entity_builder'
          - '@linked_swissbib.elasticsearch_context_mapper'
          - '@request_stack'
          - '@linked_swissbib.elasticsearch_resource_name_converter'
          - '@linked_swissbib.elasticsearch_params_builder'

    linked_swissbib.elasticsearch_context_mapper:
        class: LinkedSwissbibBundle\Elasticsearch\ContextMapper
        arguments:
          - '@linked_swissbib.cache'
          - '@linked_swissbib.http_client'
          - '%linked_swissbib.context_mapper%'
          - '@linked_swissbib.elasticsearch_resource_name_converter'
          - '@api_platform.metadata.property.name_collection_factory.cached'
          - '@api_platform.metadata.property.metadata_factory'

    linked_swissbib.elasticsearch_params_builder:
        class: LinkedSwissbibBundle\Elasticsearch\ParamsBuilder
        arguments: ['@linked_swissbib.elasticsearch_resource_name_converter', '@linked_swissbib.elasticsearch_context_mapper', '%linked_swissbib.elasticsearch_params_builder%']

    linked_swissbib.elasticsearch_resource_name_converter:
        class: LinkedSwissbibBundle\Elasticsearch\ResourceNameConverter

    linked_swissbib.operation_path_resolver.camel_case:
        class: LinkedSwissbibBundle\PathResolver\CamelCaseResourcePathGenerator

    linked_swissbib.easy_rdf_graph:
        class: EasyRdf_Graph
        factory: [LinkedSwissbibBundle\EasyRdf\EasyRdfFactory, createEasyRdfGraph]
        arguments: ['%linked_swissbib.easyrdf.namespaces%']

    linked_swissbib.rdfxml_encoder:
        class: LinkedSwissbibBundle\Serializer\Encoder\RdfxmlEncoder
        tags: [ { name: serializer.encoder } ]
        arguments: ['@linked_swissbib.easy_rdf_graph']

    linked_swissbib.turtle_encoder:
            class: LinkedSwissbibBundle\Serializer\Encoder\TurtleEncoder
            tags: [ { name: serializer.encoder } ]
            arguments: ['@linked_swissbib.easy_rdf_graph']

    inked_swissbib.ntriples_encoder:
                class: LinkedSwissbibBundle\Serializer\Encoder\NTriplesEncoder
                tags: [ { name: serializer.encoder } ]
                arguments: ['@linked_swissbib.easy_rdf_graph']

    linked_swissbib.html_encoder:
        class: LinkedSwissbibBundle\Serializer\Encoder\HtmlEncoder
        tags: [ { name: serializer.encoder } ]
        arguments: ['@templating']

    linked_swissbib.cache:
        class: Doctrine\Common\Cache\FilesystemCache
        arguments: ['%kernel.cache_dir%']

    linked_swissbib.entity_simple_entity_builder:
        class: LinkedSwissbibBundle\Entity\SimpleEntityBuilder
        arguments: ['@logger']

    linked_swissbib.serializer.normalizer.item:
        class: LinkedSwissbibBundle\Serializer\ItemNormalizer
        decorates: api_platform.jsonld.normalizer.item
        arguments:
            - '@linked_swissbib.serializer.normalizer.item.inner'
            - '@api_platform.resource_class_resolver'
        tags: [ { name: 'serializer.normalizer', priority: 12 } ]

    linked_swissbib.serializer.normalizer.collection:
        class: LinkedSwissbibBundle\Serializer\CollectionNormalizer
        decorates: api_platform.hydra.normalizer.collection
        arguments:
            - '@linked_swissbib.serializer.normalizer.collection.inner'
            - '@api_platform.resource_class_resolver'
        tags: [ { name: 'serializer.normalizer', priority: 12 } ]

    linked_swissbib.serializer.normalizer.entrypoint:
        class: LinkedSwissbibBundle\Serializer\EntrypointNormalizer
        decorates: api_platform.hydra.normalizer.entrypoint
        arguments:
            - '@linked_swissbib.serializer.normalizer.entrypoint.inner'
        tags: [ { name: 'serializer.normalizer', priority: 30 } ]

    linked_swissbib.serializer.normalizer.error:
        class: LinkedSwissbibBundle\Serializer\ErrorNormalizer
        decorates: api_platform.hydra.normalizer.error
        arguments:
            - '@linked_swissbib.serializer.normalizer.error.inner'
        tags: [ { name: 'serializer.normalizer', priority: 34 } ]

    linked_swissbib.serializer.normalizer.constraint_violation_list:
        class: LinkedSwissbibBundle\Serializer\ConstraintViolationListNormalizer
        decorates: api_platform.hydra.normalizer.constraint_violation_list
        arguments:
            - '@linked_swissbib.serializer.normalizer.constraint_violation_list.inner'
        tags: [ { name: 'serializer.normalizer', priority: 34 } ]

    linked_swissbib.serializer.normalizer.documentation:
        class: LinkedSwissbibBundle\Serializer\DocumentationNormalizer
        decorates: api_platform.hydra.normalizer.documentation
        arguments:
            - '@linked_swissbib.serializer.normalizer.documentation.inner'
        tags: [ { name: 'serializer.normalizer', priority: 34 } ]

    linked_swissbib.router:
        class: LinkedSwissbibBundle\Routing\Router
        decorates: api_platform.router
        arguments: ['@linked_swissbib.router.inner']

    linked_swissbib.http_client:
        class: GuzzleHttp\Client

    linked_swissbib.filter.fieldsqueryfilter:
        class: LinkedSwissbibBundle\Filter\FieldsQueryFilter
        tags: [ { name: 'api_platform.filter', id: 'linked_swissbib.fieldsqueryfilter' } ]

    linked_swissbib.twig.linked_swissbib_extension:
        class: LinkedSwissbibBundle\Twig\LinkedSwissbibExtension
        tags:
            - { name: twig.extension }

    api_platform.swagger.listener.ui:
        class: LinkedSwissbibBundle\Bridge\Symfony\Bundle\EventListener\SwaggerUiListener
        tags: [ { name: 'kernel.event_listener', event: 'kernel.request', method: 'onKernelRequest' } ]
