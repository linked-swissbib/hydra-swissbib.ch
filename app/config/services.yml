# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:
    linked_swissbib.elasticsearchadapter_adapter:
        class: ElasticsearchAdapter\Adapter
        arguments: ['@linked_swissbib.elasticsearchadapter_elasticsearchclientconnector']

    linked_swissbib.elasticsearchadapter_templatequerybuilder:
        class: ElasticsearchAdapter\QueryBuilder\TemplateQueryBuilder
        arguments: ['%elasticsearch_adapter.templates%']

    linked_swissbib.elasticsearchadapter_elasticsearchclientconnector:
        class: ElasticsearchAdapter\Connector\ElasticsearchClientConnector
        arguments: ['%elasticsearch_adapter.hosts%']

    linked_swissbib.elasticsearch_data_provider:
        class: LinkedSwissbibBundle\DataProvider\ElasticsearchDataProvider
        tags: [ { name: 'api_platform.item_data_provider', priority: 1 }, { name: 'api_platform.collection_data_provider', priority: 1 } ]
        arguments: ['@linked_swissbib.elasticsearchadapter_adapter', '@linked_swissbib.elasticsearchadapter_templatequerybuilder', '@linked_swissbib.entity_simple_entity_builder' ,'@linked_swissbib.elasticsearch_context_mapper', '@request_stack']

    linked_swissbib.elasticsearch_context_mapper:
        class: LinkedSwissbibBundle\Elasticsearch\ElasticsearchContextMapper
        arguments: ['@linked_swissbib.cache']

    linked_swissbib.elasticsearch_context_mapper:
        class: LinkedSwissbibBundle\Elasticsearch\ElasticsearchContextMapper
        arguments: ['@linked_swissbib.cache']

    linked_swissbib.naming.resource_path_naming_strategy.camel_case:
        class: LinkedSwissbibBundle\Naming\CamelCaseResourcePathGenerator

    linked_swissbib.cache:
        class: Doctrine\Common\Cache\FilesystemCache
        arguments: ['%kernel.cache_dir%']

    linked_swissbib.entity_simple_entity_builder:
        class: LinkedSwissbibBundle\Entity\SimpleEntityBuilder
        arguments: ['@logger']

    linked_swissbib.serializer.normalizer.item:
        class: LinkedSwissbibBundle\Serializer\ItemNormalizer
        decorates: api_platform.jsonld.normalizer.item
        arguments: ['@linked_swissbib.serializer.normalizer.item.inner', '@api_platform.resource_class_resolver']
        tags: [ { name: 'serializer.normalizer', priority: 12 } ]

    linked_swissbib.router:
        class: LinkedSwissbibBundle\Routing\Router
        decorates: api_platform.router
        arguments: ['@linked_swissbib.router.inner']